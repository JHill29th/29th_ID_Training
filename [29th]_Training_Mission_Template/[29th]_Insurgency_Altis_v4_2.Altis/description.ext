class Header
{
	maxPlayers = 37;
	minPlayers = 1;
	gameType = COOP;
};

Author = "CW3 Hill [29th ID]";
loadScreen = "BlueAndGreyA.paa";
onLoadName = "29th Insurgency v4.2";
onLoadMission = "<t size='1.5' color='#2A1ADC'>29th ID</t><t size='1.5' color='#A09FAB'> Operations</t><br/><t size='1' color='#A09FAB'>Altis Insurgency v4.2<br/>Headless Client Version<br/>Clear the insurgents from the areas marked.</t>";
//OnLoadMissionTime = true;
OverviewText = "<t size='1.5' color='#2A1ADC'>29th ID</t><t size='1.5' color='#A09FAB'> Operations</t><br/><br/><t size='1' color='#A09FAB'>Altis Insurgency v4.2<br/>Headless Client Version<br/>Clear the insurgents from the areas marked.</t>";
OverviewPicture = "BlueAndGreyA.paa";

respawnOnStart = 0;

//respawnTemplates[] = {"Spectator"};

//forceRotorLibSimulation = 0; //Force enable or disable RotorLib. 0 - options based; 1 - force enable; 2 - force disable. Default: 0
//showGroupIndicator = 1;  //When set to 1, changes default GPS mini map into a radar like display that indicates group members relative position to the player

/*corpseManagerMode = 1;
corpseLimit = 10;
corpseRemovalMinTime = 30;
corpseRemovalMaxTime = 120;
wreckManagerMode = 1;
wreckLimit = 2;
wreckRemovalMinTime = 30;
wreckRemovalMaxTime =300;*/

#include "outlw_magRepack\MagRepack_config.hpp"
#include "ATM_airdrop\dialog.hpp"
#include "taw_vd\dialog.hpp"
#include "gvs\colors_include.hpp"
#include "gvs\control_include.hpp"
#include "gvs\stc_include.hpp"

class CfgFunctions
{
	#include "taw_vd\CfgFunctions.hpp"
	
	class JJH
	{
		tag = "RP";
		class 29th
		{
			file = "functions";
			class cleaner {description = "Cleans up dead bodies and wrecks.";};
			class playerAdmin {description = "Checks if the player is admin.";};
			class TransHelo_Respawn {description = "Add actions back to transport helos after they respawn.";};
			class Slammer_Respawn {description = "Add actions back to tanks after they respawn.";};
			class ServiceVehAmmo_Respawn {description = "Adds actions back to Service Vehicles after they respawn.";};
			class MobileRespawn_Respawn {description = "Adds actions back to MRV after it respawns.";};
			class move_to_mobile {description = "Moves player to MRV.";};
			class spectator {description = "Spectator script.";};
			class opSetUp {description = "Based on parameter settings, sets up OPs.";};
			class baseProtection {description = "Prevent firing, throwing and placing at the base.";};
		};
	};
};

class CfgSounds
{
	sounds[] = {Vent,Vent2,Para};
	class Vent {name="Vent";sound[]={ATM_airdrop\data\Vent.ogg,db-11,1.0};titles[] = {};};
	class Vent2 {name="Vent2";sound[]={ATM_airdrop\data\Vent2.ogg,db-11,1.0};titles[] = {};};
	class Para {name="Para";sound[]={ATM_airdrop\data\parachute.ogg,db-11,1.0};titles[] = {};};
};

class CfgNotifications 
{
	#include "data\cfgNotifications.hpp"
};

class Params
{
	#include "data\params.hpp"
};